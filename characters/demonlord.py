from string import Template

from core import root
from random import randint

from datastore.deffect import EFF
from datastore.dperks import PRK
from datastore.dsources import SRC
from datastore.misc import RACES
from myrandom import Chance
from resists.rstcls import Resist
from resists.rstmanager import ResistManager
from resists.rststates import Ward, Immunity
from vkmodule import send
import varbank as vb
'''
—á—Ç–æ –±—ã–ª–æ —Ä–∞–Ω—å—à–µ —É –¥–µ–º–æ–Ω–æ–ª–æ–≥–∞:
# –£–¥–∞—Ä —Ö–≤–æ—Å—Ç–æ–º + –ö–∏—Å–ª–æ—Ç–∞ (2 –ú–†), —É–Ω–∏—á—Ç–æ–∂–µ–Ω–∏–µ –±—Ä–æ–Ω–∏ (–º–æ–∂–Ω–æ –±—ã–ª–æ –∏ –≤ –æ—Ç—Ä–∏—Ü)
f'[2] üî• –ì–µ–µ–Ω–Ω–∞. –û–≥–Ω–µ–Ω–Ω—ã–π —à—Ç–æ—Ä–º –Ω–∞ –∫–æ–º–∞–Ω–¥—É, % —à–∞–Ω—Å –ø–æ–¥–∂–æ–≥–∞ –≤—Ä–∞–≥–∞, 5 –ú–† \n ' \
f'[3] –ú–µ–¥–∏—Ç–∞—Ü–∏—è. –í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –º–∞–Ω—ã, +–º–∞—Å—Ç–µ—Ä—Å—Ç–≤–æ. –û–≥–Ω–µ–Ω–Ω—ã–π —â–∏—Ç. \n' \
f'[4] ‚öî –ö–Ω—É—Ç –±–µ–∑–¥–Ω—ã. —É–º–µ–Ω—å—à–µ–Ω–∏–µ –∞—Ç–∞–∫–∏, –º–∞–∫—Å. –û–ó –æ–ø–ø–æ–Ω–µ–Ω—Ç–∞, 2 –ú–† \n' \
5. –ü—Ä–∏–∑—ã–≤ –¥–æ–ø–ø–µ–ª—è
'''

class DemonLord(root.Hero):
    size = 2 # –ì–∏–≥–∞–Ω—Ç

    def __init__(self, pvp_id):
        super().__init__(pvp_id)
        self.resists = ResistManager({SRC.MOVEMENT: Resist(0, Immunity), SRC.FIRE: Resist(50, Ward), SRC.MIND: Resist(0, Ward)})
        self.race = RACES.DEMON
        self.ulta = 2
        self.lengthOfWeapon = 2
        self.skills.append(PRK.TALISMANS)

    def options(self, other):
        opt_rep = f'[1]* –¢—Ä—ë—Ö–≥–ª–∞–≤—ã–π —É–¥–∞—Ä (–ø–æ —Ä—è–¥—É). –£–º–µ—Ä—à–∏–µ –æ—Ç –∞—Ç–∞–∫–∏ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤—è—Ç –≤–∞–º –û–ó. \n'\
                  f'[2]* –ö–ª–∏–Ω–æ–∫ –ë–µ–∑–¥–Ω—ã / –û–±—Ä–∞—Ç–∏—Ç—å –≤ –∫–∞–º–µ–Ω—å, {Chance(70+self.lvl, SRC.EARTH, SRC.STUN).show(other)} \n'\
                  f'[3] {{–í–æ–¥–∞}} –ü–ª–µ–≤–æ–∫ –∫–∏—Å–ª–æ—Ç–æ–π / –£–Ω–∏—á—Ç–æ–∂–∏—Ç—å –±—Ä–æ–Ω—é, 75% \n'\
                  f'[4] –ì–ª—É–±–∏–Ω–Ω–∞—è –∑–∞—â–∏—Ç–∞. –û–∫—É—Ç–∞—Ç—å —Å–µ–±—è –æ–≥–Ω–µ–Ω–Ω—ã–º —â–∏—Ç–æ–º, –∞ –Ω–∞ —Ü–µ–ª—å –†–µ–≥–µ–Ω–µ—Ä–∞—Ü–∏—é. \n'\
                  f'[5] –ö–∞—Ç–∞–≤–∞—Å–∏—è, {self.ulta} –ø—Ä–∏–º–µ–Ω–µ–Ω–∏–π. –ü–µ—Ä–µ–º–µ—à–∏–≤–∞–µ—Ç —Ä—è–¥—ã –ø—Ä–æ—Ç–∏–≤–Ω–∏–∫–∞, –Ω–µ–±–æ–ª—å—à–æ–π –º–∞—Å—Å–æ–≤—ã–π —É—Ä–æ–Ω. \n' + super().options(other)
        return opt_rep

    def firstAction(self, other, ctx):
        if not self.isReachableForMelee(other, ctx): return -1
        for enemy in filter(lambda x: x.position == other.position, vb.teams[self.enemyTeam]): # —É–¥–∞—Ä –ø–æ —Ä—è–¥—É, –≥–¥–µ –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤—Ä–∞–∂–µ—Å–∫–∞—è —Ü–µ–ª—å
            self.MeleePattern(enemy, ctx, specialReport=Template(f'–î–µ–º–æ–Ω-–ø—Ä–∏–Ω—Ü –Ω–∞–Ω–æ—Å–∏—Ç $dmg —É—Ä–æ–Ω–∞ –ø–æ {enemy}...'))
            if enemy.health < 0 and enemy.lives <= 0 and enemy.resists[SRC.FINALSTRIKE].value == 0: send(ctx, f'–î–µ–º–æ–Ω –ø–æ–∂–∏—Ä–∞–µ—Ç —Ç—Ä—É–ø {enemy} –∏ –≤–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç {self.heal(0.25 * other.max_hp)} –û–ó.')
        return 'mass'

    def secondAction(self, other: root.HeroInstance, ctx):
        x = self.MeleePattern(other, ctx, multCoef=2)
        if x not in (0, -1) and other.stunMyself(Chance(70+self.lvl, SRC.EARTH), 1 + self.lvl // 8):
            send(ctx, f'{other} –æ–±—Ä–∞—Ç–∏–ª—Å—è –≤ –∫–∞–º–µ–Ω–Ω—É—é —Å—Ç–∞—Ç—É—é! –ù–æ –µ—Å—Ç—å –∏ –ø–ª—é—Å—ã - –≤—ã —Ç–µ–ø–µ—Ä—å –Ω–∞–¥–µ–∂–Ω–æ –∑–∞—â–∏—â–µ–Ω—ã –æ—Ç –≤—Ä–∞–∂–µ—Å–∫–æ–≥–æ —É—Ä–æ–Ω–∞ –°—Ç–∏—Ö–∏—è–º–∏ –∏ –û—Ä—É–∂–∏–µ–º.')
            other.addEffect(EFF.PETRIFIED, 2, power=[75, 75, 75, 75, 75])
        return x


    def thirdAction(self, other: root.HeroInstance, ctx):
        x = self.MagicPattern(other, ctx, mana=0, source=SRC.WATER, specialReport=Template(f'–î–µ–º–æ–Ω –ø—Ä–∏—Ü–µ–ª–∏–≤–∞–µ—Ç—Å—è –∏ –ø–ª—é—ë—Ç –∫–∏—Å–ª–æ—Ç–æ–π –∞–∫–∫—É—Ä–∞—Ç –≤ –±–µ–¥–æ–ª–∞–≥—É {other} –Ω–∞ $dmg —É—Ä–æ–Ω–∞.'))
        if x not in (0, -1) and Chance(75):
            send(ctx, f'–î–æ—Å–ø–µ—Ö–∏ {other} –±—ã–ª–∏ —É–Ω–∏—á—Ç–æ–∂–µ–Ω—ã –Ω–∞ {other.destroyArmor(x*0.4, cap=-15-self.lvl)} –ø—É–Ω–∫—Ç–æ–≤.')
        return x

    def fourthAction(self, other: root.HeroInstance, ctx):
        if self.team != other.team: return -1
        self.addEffect(EFF.FIRESHIELD, 2)
        other.addEffect(EFF.REGENHP, 2 + self.lvl // 5, power=[1.25])
        # other.addEffect(EFF.MAXHPBUFF, 2 + self.lvl // 4, power=[50+self.lvl*5])
        send(ctx, f'–ü–æ–∫—Ä–æ–≤–∏—Ç–µ–ª—å—Å—Ç–≤–æ –æ—Ç –¥–µ–º–æ–Ω–∞-–ø—Ä–∏–Ω—Ü–∞ –æ–∫—É—Ç–∞–ª–æ –µ–≥–æ –æ–≥–Ω–µ–Ω–Ω—ã–º –ø–ª–∞—â–æ–º –∏ –¥–∞–ª–æ {other} –Ω–µ–±—ã–≤–∞–ª—ã–π –ø—Ä–∏–ª–∏–≤ —Å–∏–ª.')


    def fifthAction(self, other, ctx):
        if not self.ulta > 0: return -1
        self.ulta -= 1
        for enemy in vb.teams[self.enemyTeam]:
            enemy: root.HeroInstance
            enemy.harmWithSRC(SRC.WEAPON, 15+self.lvl)
            enemy.position = randint(0, 1)
        send(ctx, '–î–µ–º–æ–Ω —Å–æ—Ç—Ä—è—Å–∞–µ—Ç –∑–µ–º–ª—é, –∑–∞—Å—Ç–∞–≤–ª—è—è –ø–∞–¥–∞—Ç—å —Å–≤–æ–∏—Ö –ø—Ä–æ—Ç–∏–≤–Ω–∏–∫–æ–≤ –Ω–∞ –∑–µ–º–ª—é - –∫—Ç–æ-—Ç–æ –≤–µ—Ä–Ω—ë—Ç—Å—è –Ω–∞ —Å–≤–æ–∏ –ø–æ–∑–∏—Ü–∏–∏, –∫—Ç–æ-—Ç–æ –Ω–µ—Ç.')


    def protection(self, ctx):
        super().protection(ctx)
        self.heal(randint(20, 35 + self.lvl*2))

    def startInventory(self):
        self.addRandItemsByTier(infimum=2, supremum=4, count=2)

    def levelup(self, ind=1):
        if self.hidden_lvl % 5 == 0: self.ulta += 1
        self.power += randint(2, 4) * ind
        self.crit += ind * 2
        self.mana += ind
        self.armor_penetration += 0.04 * ind
        self.dmg += (self.lvl // 2 + randint(1, 2)) * ind
        self.ini += randint(-2, 3) * ind
        super().levelup(ind)

